package mooc.java;

import java.util.Arrays;

import java.util.Scanner;

class Currency {

    private String name; // 货币名称

    private int originalValue; // 原始值

    private int value; // 转换为人民币后的值

    public static String[] CURRENCY_NAME = { "CNY", "HKD", "USD", "EUR" };

    public static int[] CURRENCY_RATIO = { 100, 118, 15, 13 };

    public String getName() {

        return name;

    }

    public void setName(String name) {

        this.name = name;

    }

    public int getOriginalValue() {

        return originalValue;

    }

    public void setOriginalValue(int originalValue) {

        this.originalValue = originalValue;

    }

    public int getValue() {

        return value;

    }

    public void setValue(int value) {

        this.value = value;

    }

}

class HKD extends Currency implements Comparable<Currency> {
    public HKD(int a) {
        this.setValue(a);
    }
    private int value;
    private static final int j;
    static {
        int i;
        for (i=1;i<CURRENCY_NAME.length;i++) {
            if(CURRENCY_NAME[i]==Thread.currentThread().getStackTrace()[1].getClassName().substring(-4)) {
                break;
            }
        }
        j=i;
    }
    
    public int compareTo(Currency o) {
        if (this.getValue()>o.getValue()) {
            return 1;
        }else if(this.getValue()==o.getValue()) {
            return 0;
        }else {
            return -1;
        }
    }
    
    @Override
    public void setValue(int value) {
        this.value=value*CURRENCY_RATIO[j]/CURRENCY_RATIO[0];
    }
    // 实现你的构造函数与Comparable中的接口

}

class USD extends Currency implements Comparable<Currency> {
    public USD(int a) {
        this.setValue(a);
    }
    private int value;
    private static final int j;
    static {
        int i;
        for (i=1;i<CURRENCY_NAME.length;i++) {
            if(CURRENCY_NAME[i]==Thread.currentThread().getStackTrace()[1].getClassName()) {
                break;
            }
        }
        j=i;
    }
    
    public int compareTo(Currency o) {
        if (this.getValue()>o.getValue()) {
            return 1;
        }else if(this.getValue()==o.getValue()) {
            return 0;
        }else {
            return -1;
        }
    }
    
    @Override
    public void setValue(int value) {
        this.value=value*CURRENCY_RATIO[j]/CURRENCY_RATIO[0];
    }
}

class EUR extends Currency implements Comparable<Currency> {
    public EUR(int a) {
        this.setValue(a);
    }
    private int value;
    private static final int j;
    static {
        int i;
        for (i=1;i<CURRENCY_NAME.length;i++) {
            if(CURRENCY_NAME[i]==Thread.currentThread().getStackTrace()[1].getClassName()) {
                break;
            }
        }
        j=i;
    }
    
    public int compareTo(Currency o) {
        if (this.getValue()>o.getValue()) {
            return 1;
        }else if(this.getValue()==o.getValue()) {
            return 0;
        }else {
            return -1;
        }
    }
    
    @Override
    public void setValue(int value) {
        this.value=value*CURRENCY_RATIO[j]/CURRENCY_RATIO[0];
    }
}

public class Main {

    public static void main(String[] args) {

        Currency[] cs = new Currency[3];

        // 初始化

        Scanner sc = new Scanner(System.in);

        // 利用hasNextXXX()判断是否还有下一输入项

        int a = 0;

        int b = 0;

        int c = 0;

        if (sc.hasNext()) {

            a = sc.nextInt();

            cs[0] = new HKD(a);

        }

        if (sc.hasNext()) {

            b = sc.nextInt();

            cs[1] = new USD(b);

        }

        if (sc.hasNext()) {

            c = sc.nextInt();

            cs[2] = new EUR(c);

        }

        // 初始化结束

        // 请补充排序

        // 请补充输出结果

    }

}